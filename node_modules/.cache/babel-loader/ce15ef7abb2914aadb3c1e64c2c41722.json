{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shakib\\\\Desktop\\\\React\\\\eval3jan\\\\src\\\\components\\\\Left.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [form, setForm] = useState({\n    title: \"\",\n    ingredients: \"\",\n    timetocook: \"\",\n    images: \"\",\n    instructions: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(form);\n    const payload = {\n      title: form.title,\n      ingredients: form.ingredients,\n      status: false\n    };\n    fetch(\"http://localhost:3001/foods\", {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      // getTodo();\n      setForm(\"\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      name: \"title\",\n      type: \"text\",\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 93\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      name: \"ingredients\",\n      type: \"text\",\n      placeholder: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 105\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      name: \"timetocook\",\n      type: \"text\",\n      placeholder: \"Time to Cook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 105\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      name: \"images\",\n      type: \"text\",\n      placeholder: \"Image URLS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 99\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      name: \"instructions\",\n      type: \"text\",\n      placeholder: \"Instruction to Cook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 114\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: \"submit\",\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"CKKLKfrKkhArrX9o2dmg4DijxtY=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/shakib/Desktop/React/eval3jan/src/components/Left.jsx"],"names":["useState","useRef","Form","form","setForm","title","ingredients","timetocook","images","instructions","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","payload","status","fetch","method","body","JSON","stringify","headers","then"],"mappings":"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","sourcesContent":["import {useState,useRef} from \"react\";\r\n\r\nconst Form = () => {\r\n   \r\n    const [form , setForm] = useState({\r\n        title : \"\",\r\n        ingredients : \"\",\r\n        timetocook :\"\",\r\n        images : \"\",\r\n        instructions: \"\",\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n     const {name, value} = e.target;\r\n   \r\n     setForm({\r\n        ...form,\r\n         [name] : value,\r\n     });\r\n\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(form);      \r\n      \r\n      const payload = {\r\n        title: form.title,\r\n        ingredients: form.ingredients,\r\n        status: false,\r\n      };\r\n\r\n        fetch(\"http://localhost:3001/foods\", {\r\n            method : \"POST\",\r\n            body:JSON.stringify(payload),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n\r\n        .then(()=> {\r\n            // getTodo();\r\n            setForm(\"\");\r\n        });\r\n\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input onChange={handleChange} name=\"title\" type=\"text\" placeholder = \"Title\" /><br/>\r\n            <input onChange={handleChange} name=\"ingredients\" type=\"text\" placeholder = \"Ingredients\" /><br/> \r\n            <input onChange={handleChange} name=\"timetocook\" type=\"text\" placeholder = \"Time to Cook\" /><br/>\r\n            <input onChange={handleChange} name=\"images\" type=\"text\" placeholder = \"Image URLS\" /><br/>\r\n            <input onChange={handleChange} name=\"instructions\" type=\"text\" placeholder = \"Instruction to Cook\" /><br/>\r\n\r\n\r\n            <input value = \"submit\" type=\"submit\"/>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}